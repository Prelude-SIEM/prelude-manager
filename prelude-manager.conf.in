# Prelude Manager configuration file.
#
# <IMPORTANT>
#
# Sections are importants, and things won't work correctly if they are not 
# un-commented. For example you need to uncomment [MySQL] if you want the 
# MySQL plugin to be loaded.
#
# </IMPORTANT>



# Address where the sensors server is listening on.
# if value is 127.0.0.1 (or is resolved as being 127.0.0.1), 
# it mean the Manager server will be listening via a local (UNIX) 
# socket.
#
# format : address:port
#
sensors-srvr = 127.0.0.1;


# If you want this Manager to retrieve message from another
# Manager (useful if the other Manager is inside a DMZ):
#
# child-managers = x.x.x.x 
#
# This mean the messages should be gathered from x.x.x.x

#
# If you want a given reporting plugin to be protected against 
# possible failure, use the failover option. Failover will prevent
# the data sent to the report plugin to be lost in case this one fail.
#
# You might use this option multiple time for different plugins.
#
# failover = name_of_plugin



####################################
# Here start plugins configuration #
####################################

# [relaying]
#
# If you want the message caught by this manager to be relayed.
# You can use boolean AND and OR to make the rule.
#
# parent-managers = x.x.x.x || y.y.y.y && z.z.z.z
#
# This mean the emission should occur on x.x.x.x or, if it fail,
# on y.y.y.y and z.z.z.z (if one of the two host in the AND fail, 
# the emission will be considered as failed involving saving the 
# message locally).


# [db]

# The format of database used by libpreludedb.
# format = classic;

# The type of database (mysql/pgsql).
# type = mysql;

# Host the database is listening on.
# host = localhost;

# Port the database is listening on.
# port = 3306;

# Name of the database.
# name = prelude;

# Username to be used to connect the database.
# user = prelude;

# Password used to connect the database.
# pass = xxxxxx;



#
# The Textmod plugin allow to report alert as text
# in a file. Or to dump theses alert to stderr. 
#
# The default logfile for this plugin is /var/log/prelude.log
#

# [TextMod]
#
# Tell Textmod to output to stderr
# stderr;
#
#
# logfile = /var/log/prelude.log;



#
# The Xmlmod plugin allow to report alert as IDMEF XML
# in a file. Or to dump theses alert to stderr. 
#
# The default logfile for this plugin is /var/log/prelude-xml.log
#


# [XmlMod]
#
# Tell Xmlmod to output to stderr
# stderr;
#
#
# Tell Xmlmod to disable output file buffering.
# This will prevent XML alerts to be truncated and thus make real-time
# parsing easier.
#
# disable-buffering;
#
#
# Tell Xmlmod to check generated XML against IDMEF DTD
# check-dtd;
#
# 
# Tell Xmlmod to produce a pretty, human readable xml output
# format;
#
# logfile = @prefix@/var/log/prelude-xml.log;



# [Debug]
#
# Print the value of each element.
# verbose; 
#
# Be aggressive, print strings even if consistency checks fail 
# (may lead to crash).
# aggressive;
#
# Use wide format for lists.
# wide-format;



