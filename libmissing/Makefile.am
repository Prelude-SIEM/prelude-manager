## Process this file with automake to produce Makefile.in.
# Copyright (C) 2004-2006 Free Software Foundation, Inc.
#
# This file is free software, distributed under the terms of the GNU
# General Public License.  As a special exception to the GNU General
# Public License, this file may be distributed as part of a program
# that contains a configuration script generated by Autoconf, under
# the same distribution terms as the rest of that program.
#
# Generated by gnulib-tool.
# Reproduce by: gnulib-tool --import --dir=. --lib=libmissing --source-base=libmissing --m4-base=libmissing/m4 --doc-base=libmissing/doc --aux-dir=. --lgpl --libtool --macro-prefix=gl getaddrinfo inet_ntop memset pathmax poll snprintf strdup time_r vsnprintf

AUTOMAKE_OPTIONS = 1.5 gnits

noinst_LTLIBRARIES = libmissing.la

libmissing_la_SOURCES =
libmissing_la_LIBADD = $(LTLIBOBJS)
libmissing_la_LDFLAGS = $(AM_LDFLAGS)
noinst_HEADERS =
EXTRA_DIST =
BUILT_SOURCES =
SUFFIXES =
MOSTLYCLEANFILES = core *.stackdump
MOSTLYCLEANDIRS =
CLEANFILES =
DISTCLEANFILES =
MAINTAINERCLEANFILES =

AM_CPPFLAGS =

## begin gnulib module alloca-opt

BUILT_SOURCES += $(ALLOCA_H)
EXTRA_DIST += alloca_.h

# We need the following in order to create <alloca.h> when the system
# doesn't have one that works with the given compiler.
alloca.h: alloca_.h
	cp -f $(srcdir)/alloca_.h $@-t
	mv -f $@-t $@
MOSTLYCLEANFILES += alloca.h alloca.h-t

## end   gnulib module alloca-opt

## begin gnulib module arpa_inet

BUILT_SOURCES += $(ARPA_INET_H)

# We need the following in order to create <arpa/inet.h> when the system
# doesn't have one.
arpa/inet.h:
	test -d arpa || mkdir arpa
	rm -f $@-t $@
	echo '#include <sys/socket.h>' >$@-t
	mv $@-t $@
MOSTLYCLEANFILES += arpa/inet.h arpa/inet.h-t
MOSTLYCLEANDIRS += arpa

## end   gnulib module arpa_inet

## begin gnulib module getaddrinfo

libmissing_la_SOURCES += getaddrinfo.h

## end   gnulib module getaddrinfo

## begin gnulib module gettext-h

libmissing_la_SOURCES += gettext.h

## end   gnulib module gettext-h

## begin gnulib module inet_ntop

libmissing_la_SOURCES += inet_ntop.h

## end   gnulib module inet_ntop

## begin gnulib module minmax

libmissing_la_SOURCES += minmax.h

## end   gnulib module minmax

## begin gnulib module netinet_in

BUILT_SOURCES += $(NETINET_IN_H)

# We need the following in order to create <netinet/in.h> when the system
# doesn't have one.
netinet/in.h:
	test -d netinet || mkdir netinet
	rm -f $@-t $@
	echo '#include <sys/socket.h>' >$@-t
	mv $@-t $@
MOSTLYCLEANFILES += netinet/in.h netinet/in.h-t
MOSTLYCLEANDIRS += netinet

## end   gnulib module netinet_in

## begin gnulib module pathmax

EXTRA_DIST += pathmax.h

## end   gnulib module pathmax

## begin gnulib module poll

BUILT_SOURCES += $(POLL_H)
EXTRA_DIST += poll_.h

# We need the following in order to create <poll.h> when the system
# doesn't have one.
poll.h: poll_.h
	cp -f $(srcdir)/poll_.h $@-t
	mv -f $@-t $@
MOSTLYCLEANFILES += poll.h poll.h-t

## end   gnulib module poll

## begin gnulib module size_max

libmissing_la_SOURCES += size_max.h

## end   gnulib module size_max

## begin gnulib module snprintf

libmissing_la_SOURCES += snprintf.h

## end   gnulib module snprintf

## begin gnulib module stdbool

BUILT_SOURCES += $(STDBOOL_H)
EXTRA_DIST += stdbool_.h

# We need the following in order to create <stdbool.h> when the system
# doesn't have one that works.
stdbool.h: stdbool_.h
	rm -f $@-t $@
	sed -e 's/@''HAVE__BOOL''@/$(HAVE__BOOL)/g' < $(srcdir)/stdbool_.h > $@-t
	mv $@-t $@
MOSTLYCLEANFILES += stdbool.h stdbool.h-t

## end   gnulib module stdbool

## begin gnulib module strdup

EXTRA_DIST += strdup.h

## end   gnulib module strdup

## begin gnulib module sys_socket

BUILT_SOURCES += $(SYS_SOCKET_H)
EXTRA_DIST += socket_.h

# We need the following in order to create <sys/socket.h> when the system
# doesn't have one that works with the given compiler.
sys/socket.h: socket_.h
	test -d sys || mkdir sys
	cp -f $(srcdir)/socket_.h $@-t
	mv -f $@-t $@
MOSTLYCLEANFILES += sys/socket.h sys/socket.h-t
MOSTLYCLEANDIRS += sys

## end   gnulib module sys_socket

## begin gnulib module time_r

EXTRA_DIST += time_r.h

## end   gnulib module time_r

## begin gnulib module vasnprintf

libmissing_la_SOURCES += printf-args.h printf-parse.h vasnprintf.h

## end   gnulib module vasnprintf

## begin gnulib module vsnprintf

libmissing_la_SOURCES += vsnprintf.h

## end   gnulib module vsnprintf

## begin gnulib module xsize

libmissing_la_SOURCES += xsize.h

## end   gnulib module xsize

## begin gnulib module dummy

libmissing_la_SOURCES += dummy.c

## end   gnulib module dummy


mostlyclean-local: mostlyclean-generic
	@test -z "$(MOSTLYCLEANDIRS)" || \
	  for dir in $(MOSTLYCLEANDIRS); do \
	    if test -d $$dir; then \
	      echo "rmdir $$dir"; rmdir $$dir; \
	    fi; \
	  done
